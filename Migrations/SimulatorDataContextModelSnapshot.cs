// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _ProyectoFinal_Johanny_Vivas_Arias.DataAccess.Contexts;

namespace _ProyectoFinal_Johanny_Vivas_Arias.Migrations
{
    [DbContext(typeof(SimulatorDataContext))]
    partial class SimulatorDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_ProyectoFinal_Johanny_Vivas_Arias.Models.ContinuosProdEmulate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Months")
                        .HasColumnType("int");

                    b.Property<int>("dailyHours")
                        .HasColumnType("int");

                    b.Property<int>("days")
                        .HasColumnType("int");

                    b.Property<float>("hourCost")
                        .HasColumnType("real");

                    b.Property<int>("hours")
                        .HasColumnType("int");

                    b.Property<int?>("machineid")
                        .HasColumnType("int");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.Property<int>("weeklyDays")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("machineid");

                    b.HasIndex("productid");

                    b.ToTable("tbContinuosProdEmulate");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Months = 6,
                            dailyHours = 8,
                            days = 0,
                            hourCost = 10f,
                            hours = 0,
                            weeklyDays = 6
                        },
                        new
                        {
                            id = 2,
                            Months = 4,
                            dailyHours = 12,
                            days = 0,
                            hourCost = 15f,
                            hours = 0,
                            weeklyDays = 6
                        });
                });

            modelBuilder.Entity("_ProyectoFinal_Johanny_Vivas_Arias.Models.Machine", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("failProbability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productsPerHour")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("timeToFix")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbMachine");

                    b.HasData(
                        new
                        {
                            id = 1,
                            failProbability = "1,0",
                            productsPerHour = 100,
                            status = true,
                            timeToFix = 3
                        },
                        new
                        {
                            id = 2,
                            failProbability = "0,7",
                            productsPerHour = 100,
                            status = true,
                            timeToFix = 3
                        });
                });

            modelBuilder.Entity("_ProyectoFinal_Johanny_Vivas_Arias.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("productPrice")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("tbProducts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Clavos",
                            productPrice = 5f
                        },
                        new
                        {
                            id = 2,
                            name = "Tornillos",
                            productPrice = 5f
                        });
                });

            modelBuilder.Entity("_ProyectoFinal_Johanny_Vivas_Arias.Models.ContinuosProdEmulate", b =>
                {
                    b.HasOne("_ProyectoFinal_Johanny_Vivas_Arias.Models.Machine", "machine")
                        .WithMany()
                        .HasForeignKey("machineid");

                    b.HasOne("_ProyectoFinal_Johanny_Vivas_Arias.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productid");

                    b.Navigation("machine");

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
